import { type User } from "@prisma/client";
import { Authenticator } from "@solid-auth/core";
import { DiscordStrategy } from "@solid-auth/socials";
import { createCookieSessionStorage } from "solid-start";
import { serverEnv } from "~/env/server";
import { prisma } from "./db/client";

export const sessionStorage = createCookieSessionStorage({
  cookie: {
    name: "_session",
    sameSite: "lax",
    path: "/",
    secrets: [serverEnv.SESSION_SECRET],
    secure: true,
    maxAge: 60 * 60 * 24 * 30,
    httpOnly: true,
  },
});

export const authenticator = new Authenticator<User>(sessionStorage).use(
  new DiscordStrategy(
    {
      clientID: serverEnv.DISCORD_CLIENT_ID,
      clientSecret: serverEnv.DISCORD_CLIENT_SECRET,
      callbackURL: serverEnv.SITE_URL + "/api/auth/discord/callback",
    },
    async ({ profile }) => {
      let user = await prisma.user.findUnique({
        where: {
          id: profile.id,
        },
      });
      if (!user) {
        user = await prisma.user.create({
          data: {
            id: profile.id,
            displayName: profile.__json.username,
            avatar: profile.photos[0].value,
          },
        });
      }
      return user;
    }
  )
);
